{"version":3,"sources":["utility/hooks/useSkin.js","utility/Utils.js","utility/hooks/useLayout.js","@core/layouts/BlankLayout.js","@core/components/avatar/index.js","router/routes/Authentication.js","@core/components/customizer/index.js","@core/components/scrolltop/index.js","@core/layouts/components/footer/index.js","assets/images/portrait/small/avatar-s-11.jpg","@core/layouts/components/navbar/UserDropdown.js","@core/layouts/components/navbar/NavbarUser.js","@core/layouts/components/navbar/index.js","@core/layouts/components/menu/vertical-menu/VerticalMenuHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuLink.js","@core/layouts/utils.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuGroup.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuSectionHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuItems.js","@core/layouts/components/menu/vertical-menu/index.js","utility/hooks/useRTL.js","utility/hooks/useNavbarType.js","utility/hooks/useFooterType.js","utility/hooks/useNavbarColor.js","@core/layouts/VerticalLayout.js","navigation/vertical/index.js","layouts/VerticalLayout.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuLink.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuGroup.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuItems.js","@core/layouts/components/menu/horizontal-menu/index.js","@core/layouts/HorizontalLayout.js","navigation/horizontal/index.js","layouts/HorizontalLayout.js","@core/layouts/components/layout-wrapper/index.js","@core/components/routes/PublicRoute.js","@core/components/routes/PrivateRoute.js","router/routes/index.js","router/Router.js","App.js"],"names":["useSkin","dispatch","useDispatch","store","useSelector","state","layout","useEffect","element","window","document","body","classList","remove","skin","add","dark","bordered","setSkin","type","handleSkin","isObjEmpty","obj","Object","keys","length","getUserData","JSON","parse","localStorage","getItem","getHomeRouteForLoggedInUser","userRole","DefaultRoute","useLayout","setLayout","value","handleLayout","breakpoint","innerWidth","addEventListener","lastLayout","setLastLayout","handleLastLayout","BlankLayout","useState","isMounted","setIsMounted","className","classnames","Avatar","forwardRef","props","ref","img","size","icon","color","status","badgeUp","content","Tag","tag","initials","imgWidth","badgeText","imgHeight","badgeColor","imgClassName","contentStyles","rest","undefined","style","str","results","split","forEach","e","push","join","getInitials","pill","src","alt","height","width","defaultProps","Login","lazy","Register","ForgotPassword","AuthenticationRoutes","path","meta","publicRoute","restricted","Customizer","isRtl","setIsRtl","isHidden","navbarType","footerType","navbarColor","setIsHidden","contentWidth","menuCollapsed","setNavbarType","setFooterType","setNavbarColor","setContentWidth","setMenuCollapsed","openCustomizer","setOpenCustomizer","handleToggle","preventDefault","open","href","onClick","options","wheelPropagation","skinsArr","name","label","checked","map","radio","index","marginCondition","id","onChange","for","renderSkinsRadio","selected","border","navbarTypeArr","renderNavbarTypeRadio","footerTypeArr","renderFooterTypeRadio","ScrollTop","showOffset","scrollBehaviour","children","visible","setVisible","pageYOffset","scroll","top","behavior","Footer","Date","getFullYear","target","rel","UserDropdown","defaultAvatar","end","Link","to","divider","NavbarUser","ThemeNavbar","setMenuVisibility","ThemeToggler","VerticalMenuHeader","setGroupOpen","menuHover","user","Toggler","role","themeConfig","app","appLogoImage","appName","VerticalNavMenuLink","item","activeItem","LinkTag","externalLink","NavLink","disabled","active","navLink","newTab","isActive","title","badge","hasActiveChild","currentUrl","child","includes","removeChildren","openGroup","currentActiveGroup","indexOf","splice","VerticalNavMenuGroup","groupOpen","parentItem","groupActive","setGroupActive","setCurrentActiveGroup","location","useLocation","currentURL","pathname","onCollapseClick","parent","activeGroup","toggleOpenGroup","isOpen","VerticalNavMenuItems","items","VerticalNavMenuSectionHeader","header","VerticalMenuNavItems","Components","TagName","resolveNavItemComponent","canViewMenuGroup","Sidebar","menu","menuData","setActiveItem","setMenuHover","shadowRef","useRef","expanded","onMouseEnter","onMouseLeave","onScrollY","container","scrollTop","current","contains","scrollMenu","useRTL","isRTL","getElementsByTagName","setAttribute","handleRTL","useNavbarType","handleNavbarType","useFooterType","handleFooterType","useNavbarColor","handleNavbarColor","VerticalLayout","navbar","footer","menuVisibility","windowWidth","setWindowWidth","layoutStore","handleWindowWidth","menuHidden","val","handleMenuCollapsed","footerClasses","static","sticky","hidden","navbarClasses","floating","bgColorCondition","expand","light","show","customizer","handleMenuHidden","handleContentWidth","navigation","HorizontalNavMenuLink","isChild","setMenuOpen","commonClass","applyHeight","enabled","phase","fn","data","stylesObj","pageHeight","innerHeight","popperEl","elements","popper","ddTop","getBoundingClientRect","clientHeight","maxHeight","overflowY","ddRef","left","closest","styles","HorizontalNavMenuGroup","submenu","menuOpen","popperElement","setPopperElement","referenceElement","setReferenceElement","popperOffsetHorizontal","popperPlacement","popperPlacementSubMenu","usePopper","placement","modifiers","offset","update","attributes","HorizontalNavMenuItems","HorizontalMenu","HorizontalLayout","navbarScrolled","setNavbarScrolled","routerProps","currentActiveItem","LayoutWrapper","routeMeta","navbarStore","layoutStored","appLayoutCondition","appLayout","Fragment","query","memo","PublicRoute","route","restrictedRoute","fallback","PrivateRoute","ability","useContext","AbilityContext","action","resource","can","replace","getLayout","blank","vertical","horizontal","Home","SecondPage","Routes","MergeLayoutRoutes","defaultLayout","LayoutRoutes","filter","isBlank","RouteTag","Wrapper","getRouteMeta","getRoutes","AllRoutes","layoutItem","Error","NotAuthorized","Router","allRoutes","getHomeRoute","groups","console","log","useRoutes","App"],"mappings":"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","file":"static/js/7.a7d59fe3.chunk.js","sourcesContent":["// ** React Imports\nimport { useEffect } from \"react\"\n\n// ** Store Imports\nimport { handleSkin } from \"@store/layout\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nexport const useSkin = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state.layout)\n\n  const setSkin = (type) => {\n    dispatch(handleSkin(type))\n  }\n\n  useEffect(() => {\n    // ** Get Body Tag\n    const element = window.document.body\n\n    // ** Define classnames for skins\n    const classNames = {\n      dark: \"dark-layout\",\n      bordered: \"bordered-layout\",\n      \"semi-dark\": \"semi-dark-layout\"\n    }\n\n    // ** Remove all classes from Body on mount\n    element.classList.remove(...element.classList)\n\n    // ** If skin is not light add skin class\n    if (store.skin !== \"light\") {\n      element.classList.add(classNames[store.skin])\n    }\n  }, [store.skin])\n\n  return { skin: store.skin, setSkin }\n}\n","import { DefaultRoute } from \"../router/routes\";\n\n// ** Checks if an object is empty (returns boolean)\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\n// ** Returns K format from a number\nexport const kFormatter = (num) =>\n  num > 999 ? `${(num / 1000).toFixed(1)}k` : num;\n\n// ** Converts HTML to string\nexport const htmlToString = (html) => html.replace(/<\\/?[^>]+(>|$)/g, \"\");\n\n// ** Checks if the passed date is today\nconst isToday = (date) => {\n  const today = new Date();\n  return (\n    /* eslint-disable operator-linebreak */\n    date.getDate() === today.getDate() &&\n    date.getMonth() === today.getMonth() &&\n    date.getFullYear() === today.getFullYear()\n    /* eslint-enable */\n  );\n};\n\n/**\n ** Format and return date in Humanize format\n ** Intl docs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/format\n ** Intl Constructor: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\n * @param {String} value date to format\n * @param {Object} formatting Intl object to format with\n */\nexport const formatDate = (\n  value,\n  formatting = { month: \"short\", day: \"numeric\", year: \"numeric\" }\n) => {\n  if (!value) return value;\n  return new Intl.DateTimeFormat(\"en-US\", formatting).format(new Date(value));\n};\n\n// ** Returns short month of passed date\nexport const formatDateToMonthShort = (value, toTimeForCurrentDay = true) => {\n  const date = new Date(value);\n  let formatting = { month: \"short\", day: \"numeric\" };\n\n  if (toTimeForCurrentDay && isToday(date)) {\n    formatting = { hour: \"numeric\", minute: \"numeric\" };\n  }\n\n  return new Intl.DateTimeFormat(\"en-US\", formatting).format(new Date(value));\n};\n\n/**\n ** Return if user is logged in\n ** This is completely up to you and how you want to store the token in your frontend application\n *  ? e.g. If you are using cookies to store the application please update this function\n */\nexport const isUserLoggedIn = () => localStorage.getItem(\"userData\");\nexport const getUserData = () => JSON.parse(localStorage.getItem(\"userData\"));\n\n/**\n ** This function is used for demo purpose route navigation\n ** In real app you won't need this function because your app will navigate to same route for each users regardless of ability\n ** Please note role field is just for showing purpose it's not used by anything in frontend\n ** We are checking role just for ease\n * ? NOTE: If you have different pages to navigate based on user ability then this function can be useful. However, you need to update it.\n * @param {String} userRole Role of user\n */\nexport const getHomeRouteForLoggedInUser = (userRole) => {\n  if (userRole === \"admin\") return DefaultRoute;\n  if (userRole === \"client\") return \"/access-control\";\n  return \"/login\";\n};\n\n// ** React Select Theme Colors\nexport const selectThemeColors = (theme) => ({\n  ...theme,\n  colors: {\n    ...theme.colors,\n    primary25: \"#7367f01a\", // for option hover bg-color\n    primary: \"#7367f0\", // for selected option bg-color\n    neutral10: \"#7367f0\", // for tags bg-color\n    neutral20: \"#ededed\", // for input border-color\n    neutral30: \"#ededed\", // for input hover border-color\n  },\n});\n","//** React Imports\nimport { useEffect } from \"react\"\n\n// ** Store Imports\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { handleLayout, handleLastLayout } from \"@store/layout\"\n\nexport const useLayout = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state.layout)\n\n  const setLayout = (value) => {\n    dispatch(handleLayout(value))\n  }\n\n  const setLastLayout = (value) => {\n    dispatch(handleLastLayout(value))\n  }\n\n  if (window) {\n    const breakpoint = 1200\n\n    useEffect(() => {\n      if (window.innerWidth < breakpoint) {\n        setLayout(\"vertical\")\n      }\n\n      window.addEventListener(\"resize\", () => {\n        if (\n          window.innerWidth <= breakpoint &&\n          store.lastLayout !== \"vertical\" &&\n          store.layout !== \"vertical\"\n        ) {\n          setLayout(\"vertical\")\n        }\n        if (\n          window.innerWidth >= breakpoint &&\n          store.lastLayout !== store.layout\n        ) {\n          setLayout(store.lastLayout)\n        }\n      })\n    }, [store.layout])\n  }\n\n  return {\n    layout: store.layout,\n    setLayout,\n    lastLayout: store.lastLayout,\n    setLastLayout\n  }\n}\n","// ** React Imports\nimport { Outlet } from \"react-router-dom\"\nimport { useEffect, useState } from \"react\"\n\n// ** Custom Hooks\nimport { useSkin } from \"@hooks/useSkin\"\n\n// ** Third Party Components\nimport classnames from \"classnames\"\n\nconst BlankLayout = () => {\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n\n  // ** Hooks\n  const { skin } = useSkin()\n\n  useEffect(() => {\n    setIsMounted(true)\n    return () => setIsMounted(false)\n  }, [])\n\n  if (!isMounted) {\n    return null\n  }\n\n  return (\n    <div\n      className={classnames(\"blank-page\", {\n        \"dark-layout\": skin === \"dark\"\n      })}\n    >\n      <div className=\"app-content content\">\n        <div className=\"content-wrapper\">\n          <div className=\"content-body\">\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BlankLayout\n","// ** React Imports\nimport { forwardRef } from \"react\"\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\"\nimport classnames from \"classnames\"\n\n// ** Reactstrap Imports\nimport { Badge } from \"reactstrap\"\n\nconst Avatar = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    img,\n    size,\n    icon,\n    color,\n    status,\n    badgeUp,\n    content,\n    tag: Tag,\n    initials,\n    imgWidth,\n    className,\n    badgeText,\n    imgHeight,\n    badgeColor,\n    imgClassName,\n    contentStyles,\n    ...rest\n  } = props\n\n  // ** Function to extract initials from content\n  const getInitials = (str) => {\n    const results = []\n    const wordArray = str.split(\" \")\n    wordArray.forEach((e) => {\n      results.push(e[0])\n    })\n    return results.join(\"\")\n  }\n\n  return (\n    <Tag\n      className={classnames(\"avatar\", {\n        [className]: className,\n        [`bg-${color}`]: color,\n        [`avatar-${size}`]: size\n      })}\n      ref={ref}\n      {...rest}\n    >\n      {img === false || img === undefined ? (\n        <span\n          className={classnames(\"avatar-content\", {\n            \"position-relative\": badgeUp\n          })}\n          style={contentStyles}\n        >\n          {initials ? getInitials(content) : content}\n\n          {icon ? icon : null}\n          {badgeUp ? (\n            <Badge\n              color={badgeColor ? badgeColor : \"primary\"}\n              className=\"badge-sm badge-up\"\n              pill\n            >\n              {badgeText ? badgeText : \"0\"}\n            </Badge>\n          ) : null}\n        </span>\n      ) : (\n        <img\n          className={classnames({\n            [imgClassName]: imgClassName\n          })}\n          src={img}\n          alt=\"avatarImg\"\n          height={imgHeight && !size ? imgHeight : 32}\n          width={imgWidth && !size ? imgWidth : 32}\n        />\n      )}\n      {status ? (\n        <span\n          className={classnames({\n            [`avatar-status-${status}`]: status,\n            [`avatar-status-${size}`]: size\n          })}\n        ></span>\n      ) : null}\n    </Tag>\n  )\n})\n\nexport default Avatar\n\n// ** PropTypes\nAvatar.propTypes = {\n  icon: Proptypes.node,\n  src: Proptypes.string,\n  badgeUp: Proptypes.bool,\n  content: Proptypes.string,\n  badgeText: Proptypes.string,\n  className: Proptypes.string,\n  imgClassName: Proptypes.string,\n  contentStyles: Proptypes.object,\n  size: Proptypes.oneOf([\"sm\", \"lg\", \"xl\"]),\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\n  status: Proptypes.oneOf([\"online\", \"offline\", \"away\", \"busy\"]),\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  badgeColor: Proptypes.oneOf([\n    \"primary\",\n    \"secondary\",\n    \"success\",\n    \"danger\",\n    \"info\",\n    \"warning\",\n    \"dark\",\n    \"light-primary\",\n    \"light-secondary\",\n    \"light-success\",\n    \"light-danger\",\n    \"light-info\",\n    \"light-warning\",\n    \"light-dark\"\n  ]),\n  color: Proptypes.oneOf([\n    \"primary\",\n    \"secondary\",\n    \"success\",\n    \"danger\",\n    \"info\",\n    \"warning\",\n    \"dark\",\n    \"light-primary\",\n    \"light-secondary\",\n    \"light-success\",\n    \"light-danger\",\n    \"light-info\",\n    \"light-warning\",\n    \"light-dark\"\n  ]),\n  initials(props) {\n    if (props[\"initials\"] && props[\"content\"] === undefined) {\n      return new Error(\"content prop is required with initials prop.\")\n    }\n    if (props[\"initials\"] && typeof props[\"content\"] !== \"string\") {\n      return new Error(\"content prop must be a string.\")\n    }\n    if (\n      typeof props[\"initials\"] !== \"boolean\" &&\n      props[\"initials\"] !== undefined\n    ) {\n      return new Error(\"initials must be a boolean!\")\n    }\n  }\n}\n\n// ** Default Props\nAvatar.defaultProps = {\n  tag: \"div\"\n}\n","// ** React Imports\nimport { lazy } from \"react\";\n\nconst Login = lazy(() => import(\"../../views/pages/authentication/Login\"));\n// const LoginBasic = lazy(() => import('../../views/pages/authentication/LoginBasic'))\n// const LoginCover = lazy(() => import('../../views/pages/authentication/LoginCover'))\n\nconst Register = lazy(() =>\n  import(\"../../views/pages/authentication/Register\")\n);\n// const RegisterBasic = lazy(() => import('../../views/pages/authentication/RegisterBasic'))\n// const RegisterCover = lazy(() => import('../../views/pages/authentication/RegisterCover'))\n// const RegisterMultiSteps = lazy(() => import('../../views/pages/authentication/register-multi-steps'))\n\nconst ForgotPassword = lazy(() =>\n  import(\"../../views/pages/authentication/ForgotPassword\")\n);\n// const ForgotPasswordBasic = lazy(() => import('../../views/pages/authentication/ForgotPasswordBasic'))\n// const ForgotPasswordCover = lazy(() => import('../../views/pages/authentication/ForgotPasswordCover'))\n\n// const ResetPasswordBasic = lazy(() => import('../../views/pages/authentication/ResetPasswordBasic'))\n// const ResetPasswordCover = lazy(() => import('../../views/pages/authentication/ResetPasswordCover'))\n\n// const VerifyEmailBasic = lazy(() => import('../../views/pages/authentication/VerifyEmailBasic'))\n// const VerifyEmailCover = lazy(() => import('../../views/pages/authentication/VerifyEmailCover'))\n\n// const TwoStepsBasic = lazy(() => import('../../views/pages/authentication/TwoStepsBasic'))\n// const TwoStepsCover = lazy(() => import('../../views/pages/authentication/TwoStepsCover'))\n\nconst AuthenticationRoutes = [\n  {\n    path: \"/login\",\n    element: <Login />,\n    meta: {\n      layout: \"blank\",\n      publicRoute: true,\n      restricted: true,\n    },\n  },\n  {\n    path: \"/forgot-password\",\n    element: <ForgotPassword />,\n    meta: {\n      layout: \"blank\",\n      publicRoute: true,\n      restricted: true,\n    },\n  },\n  {\n    path: \"/register\",\n    element: <Register />,\n    meta: {\n      layout: \"blank\",\n      publicRoute: true,\n      restricted: true,\n    },\n  },\n  // {\n  //   path: '/pages/login-basic',\n  //   element: <LoginBasic />,\n  //   meta: {\n  //     layout: 'blank'\n  //   }\n  // },\n  // {\n  //   path: '/pages/login-cover',\n  //   element: <LoginCover />,\n  //   meta: {\n  //     layout: 'blank'\n  //   }\n  // },\n  // {\n  //   path: '/pages/register-basic',\n  //   element: <RegisterBasic />,\n  //   meta: {\n  //     layout: 'blank'\n  //   }\n  // },\n  // {\n  //   path: '/pages/register-cover',\n  //   element: <RegisterCover />,\n  //   meta: {\n  //     layout: 'blank'\n  //   }\n  // },\n  // {\n  //   path: '/pages/register-multi-steps',\n  //   element: <RegisterMultiSteps />,\n  //   meta: {\n  //     layout: 'blank'\n  //   }\n  // },\n\n  // {\n  //   path: '/forgot-password',\n  //   element: <ForgotPassword />,\n  //   layout: 'BlankLayout',\n  //   meta: {\n  //     layout: 'blank',\n  //     publicRoute: true,\n  //     restricted: true\n  //   }\n  // },\n  // {\n  //   path: '/pages/forgot-password-basic',\n  //   element: <ForgotPasswordBasic />,\n  //   meta: {\n  //     layout: 'blank'\n  //   }\n  // },\n  // {\n  //   path: '/pages/forgot-password-cover',\n  //   element: <ForgotPasswordCover />,\n  //   meta: {\n  //     layout: 'blank'\n  //   }\n  // },\n  // {\n  //   path: '/pages/reset-password-basic',\n  //   element: <ResetPasswordBasic />,\n  //   meta: {\n  //     layout: 'blank'\n  //   }\n  // },\n  // {\n  //   path: '/pages/reset-password-cover',\n  //   element: <ResetPasswordCover />,\n  //   meta: {\n  //     layout: 'blank'\n  //   }\n  // },\n  // {\n  //   path: '/pages/verify-email-basic',\n  //   element: <VerifyEmailBasic />,\n  //   meta: {\n  //     layout: 'blank'\n  //   }\n  // },\n  // {\n  //   path: '/pages/verify-email-cover',\n  //   element: <VerifyEmailCover />,\n  //   meta: {\n  //     layout: 'blank'\n  //   }\n  // },\n  // {\n  //   path: '/pages/two-steps-basic',\n  //   element: <TwoStepsBasic />,\n  //   meta: {\n  //     layout: 'blank'\n  //   }\n  // },\n  // {\n  //   path: '/pages/two-steps-cover',\n  //   element: <TwoStepsCover />,\n  //   meta: {\n  //     layout: 'blank'\n  //   }\n  // }\n];\n\nexport default AuthenticationRoutes;\n","// ** React Imports\nimport { useState } from \"react\"\n\n// ** Third Party Components\nimport Select from \"react-select\"\nimport classnames from \"classnames\"\nimport { Settings, X } from \"react-feather\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\n\n// ** Reactstrap Imports\nimport { Input, Label } from \"reactstrap\"\n\n// ** Styles\nimport \"@styles/react/libs/react-select/_react-select.scss\"\n\nconst Customizer = (props) => {\n  // ** Props\n  const {\n    skin,\n    isRtl,\n    layout,\n    setSkin,\n    setIsRtl,\n    isHidden,\n    setLayout,\n    navbarType,\n    footerType,\n    navbarColor,\n    setIsHidden,\n    contentWidth,\n    menuCollapsed,\n    setLastLayout,\n    setNavbarType,\n    setFooterType,\n    setNavbarColor,\n    setContentWidth,\n    setMenuCollapsed\n  } = props\n\n  // ** State\n  const [openCustomizer, setOpenCustomizer] = useState(false)\n\n  // ** Toggles Customizer\n  const handleToggle = (e) => {\n    e.preventDefault()\n    setOpenCustomizer(!openCustomizer)\n  }\n\n  // ** Render Layout Skin Options\n  const renderSkinsRadio = () => {\n    const skinsArr = [\n      {\n        name: \"light\",\n        label: \"Light\",\n        checked: skin === \"light\"\n      },\n      {\n        name: \"bordered\",\n        label: \"Bordered\",\n        checked: skin === \"bordered\"\n      },\n      {\n        name: \"dark\",\n        label: \"Dark\",\n        checked: skin === \"dark\"\n      },\n      {\n        name: \"semi-dark\",\n        label: \"Semi Dark\",\n        checked: skin === \"semi-dark\"\n      }\n    ]\n\n    return skinsArr.map((radio, index) => {\n      const marginCondition = index !== skinsArr.length - 1\n\n      if (layout === \"horizontal\" && radio.name === \"semi-dark\") {\n        return null\n      }\n\n      return (\n        <div\n          key={index}\n          className={classnames(\"form-check\", { \"mb-2 me-1\": marginCondition })}\n        >\n          <Input\n            type=\"radio\"\n            id={radio.name}\n            checked={radio.checked}\n            onChange={() => setSkin(radio.name)}\n          />\n          <Label className=\"form-check-label\" for={radio.name}>\n            {radio.label}\n          </Label>\n        </div>\n      )\n    })\n  }\n\n  // ** Render Navbar Colors Options\n  const renderNavbarColors = () => {\n    const colorsArr = [\n      \"white\",\n      \"primary\",\n      \"secondary\",\n      \"success\",\n      \"danger\",\n      \"info\",\n      \"warning\",\n      \"dark\"\n    ]\n\n    return colorsArr.map((color) => (\n      <li\n        key={color}\n        className={classnames(`color-box bg-${color}`, {\n          selected: navbarColor === color,\n          border: color === \"white\"\n        })}\n        onClick={() => setNavbarColor(color)}\n      ></li>\n    ))\n  }\n\n  // ** Render Navbar Type Options\n  const renderNavbarTypeRadio = () => {\n    const navbarTypeArr = [\n      {\n        name: \"floating\",\n        label: \"Floating\",\n        checked: navbarType === \"floating\"\n      },\n      {\n        name: \"sticky\",\n        label: \"Sticky\",\n        checked: navbarType === \"sticky\"\n      },\n      {\n        name: \"static\",\n        label: \"Static\",\n        checked: navbarType === \"static\"\n      },\n      {\n        name: \"hidden\",\n        label: \"Hidden\",\n        checked: navbarType === \"hidden\"\n      }\n    ]\n\n    return navbarTypeArr.map((radio, index) => {\n      const marginCondition = index !== navbarTypeArr.length - 1\n\n      if (layout === \"horizontal\" && radio.name === \"hidden\") {\n        return null\n      }\n\n      return (\n        <div\n          key={index}\n          className={classnames(\"form-check\", { \"mb-2 me-1\": marginCondition })}\n        >\n          <Input\n            type=\"radio\"\n            id={radio.name}\n            checked={radio.checked}\n            onChange={() => setNavbarType(radio.name)}\n          />\n          <Label className=\"form-check-label\" for={radio.name}>\n            {radio.label}\n          </Label>\n        </div>\n      )\n    })\n  }\n\n  // ** Render Footer Type Options\n  const renderFooterTypeRadio = () => {\n    const footerTypeArr = [\n      {\n        name: \"sticky\",\n        label: \"Sticky\",\n        checked: footerType === \"sticky\"\n      },\n      {\n        name: \"static\",\n        label: \"Static\",\n        checked: footerType === \"static\"\n      },\n      {\n        name: \"hidden\",\n        label: \"Hidden\",\n        checked: footerType === \"hidden\"\n      }\n    ]\n\n    return footerTypeArr.map((radio, index) => {\n      const marginCondition = index !== footerTypeArr.length - 1\n\n      return (\n        <div\n          key={index}\n          className={classnames(\"form-check\", { \"mb-2 me-1\": marginCondition })}\n        >\n          <Input\n            type=\"radio\"\n            checked={radio.checked}\n            id={`footer-${radio.name}`}\n            onChange={() => setFooterType(radio.name)}\n          />\n          <Label className=\"form-check-label\" for={`footer-${radio.name}`}>\n            {radio.label}\n          </Label>\n        </div>\n      )\n    })\n  }\n\n  return (\n    <div\n      className={classnames(\"customizer d-none d-md-block\", {\n        open: openCustomizer\n      })}\n    >\n      <a\n        href=\"/\"\n        className=\"customizer-toggle d-flex align-items-center justify-content-center\"\n        onClick={handleToggle}\n      >\n        <Settings size={14} className=\"spinner\" />\n      </a>\n      <PerfectScrollbar\n        className=\"customizer-content\"\n        options={{ wheelPropagation: false }}\n      >\n        <div className=\"customizer-header px-2 pt-1 pb-0 position-relative\">\n          <h4 className=\"mb-0\">Theme Customizer</h4>\n          <p className=\"m-0\">Customize & Preview in Real Time</p>\n          <a href=\"/\" className=\"customizer-close\" onClick={handleToggle}>\n            <X />\n          </a>\n        </div>\n\n        <hr />\n\n        <div className=\"px-2\">\n          <div className=\"mb-2\">\n            <p className=\"fw-bold\">Skin</p>\n            <div className=\"d-flex\">{renderSkinsRadio()}</div>\n          </div>\n\n          <div className=\"mb-2\">\n            <p className=\"fw-bold\">Content Width</p>\n            <div className=\"d-flex\">\n              <div className=\"form-check me-1\">\n                <Input\n                  type=\"radio\"\n                  id=\"full-width\"\n                  checked={contentWidth === \"full\"}\n                  onChange={() => setContentWidth(\"full\")}\n                />\n                <Label className=\"form-check-label\" for=\"full-width\">\n                  Full Width\n                </Label>\n              </div>\n              <div className=\"form-check\">\n                <Input\n                  id=\"boxed\"\n                  type=\"radio\"\n                  checked={contentWidth === \"boxed\"}\n                  onChange={() => setContentWidth(\"boxed\")}\n                />\n                <Label className=\"form-check-label\" for=\"boxed\">\n                  Boxed\n                </Label>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"form-switch mb-2 ps-0\">\n            <div className=\"d-flex\">\n              <p className=\"fw-bold me-auto mb-0\">RTL</p>\n              <Input\n                type=\"switch\"\n                id=\"rtl\"\n                name=\"RTL\"\n                checked={isRtl}\n                onChange={() => setIsRtl(!isRtl)}\n              />\n            </div>\n          </div>\n        </div>\n\n        <hr />\n\n        <div className=\"px-2\">\n          <p className=\"fw-bold\">Menu Layout</p>\n          <div className=\"mb-2\">\n            <div className=\"d-flex align-items-center\">\n              <div className=\"form-check me-1\">\n                <Input\n                  type=\"radio\"\n                  id=\"vertical-layout\"\n                  checked={layout === \"vertical\"}\n                  onChange={() => {\n                    setLayout(\"vertical\")\n                    setLastLayout(\"vertical\")\n                  }}\n                />\n                <Label className=\"form-check-label\" for=\"vertical-layout\">\n                  Vertical\n                </Label>\n              </div>\n              <div className=\"form-check\">\n                <Input\n                  type=\"radio\"\n                  id=\"horizontal-layout\"\n                  checked={layout === \"horizontal\"}\n                  onChange={() => {\n                    setLayout(\"horizontal\")\n                    setLastLayout(\"horizontal\")\n                  }}\n                />\n                <Label className=\"form-check-label\" for=\"horizontal-layout\">\n                  Horizontal\n                </Label>\n              </div>\n            </div>\n          </div>\n          {layout !== \"horizontal\" ? (\n            <div className=\"form-switch mb-2 ps-0\">\n              <div className=\"d-flex align-items-center\">\n                <p className=\"fw-bold me-auto mb-0\">Menu Collapsed</p>\n                <Input\n                  type=\"switch\"\n                  id=\"menu-collapsed\"\n                  name=\"menu-collapsed\"\n                  checked={menuCollapsed}\n                  onChange={() => setMenuCollapsed(!menuCollapsed)}\n                />\n              </div>\n            </div>\n          ) : null}\n\n          <div className=\"form-switch mb-2 ps-0\">\n            <div className=\"d-flex align-items-center\">\n              <p className=\"fw-bold me-auto mb-0\">Menu Hidden</p>\n              <Input\n                type=\"switch\"\n                id=\"menu-hidden\"\n                name=\"menu-hidden\"\n                checked={isHidden}\n                onChange={() => setIsHidden(!isHidden)}\n              />\n            </div>\n          </div>\n        </div>\n\n        <hr />\n\n        <div className=\"px-2\">\n          {layout !== \"horizontal\" ? (\n            <div className=\"mb-2\">\n              <p className=\"fw-bold\">Navbar Color</p>\n              <ul className=\"list-inline unstyled-list\">\n                {renderNavbarColors()}\n              </ul>\n            </div>\n          ) : null}\n\n          <div className=\"mb-2\">\n            <p className=\"fw-bold\">\n              {layout === \"horizontal\" ? \"Menu\" : \"Navbar\"} Type\n            </p>\n            <div className=\"d-flex\">{renderNavbarTypeRadio()}</div>\n          </div>\n        </div>\n\n        <hr />\n\n        <div className=\"px-2\">\n          <div className=\"mb-2\">\n            <p className=\"fw-bold\">Footer Type</p>\n            <div className=\"d-flex\">{renderFooterTypeRadio()}</div>\n          </div>\n        </div>\n      </PerfectScrollbar>\n    </div>\n  )\n}\n\nexport default Customizer\n","// ** React Imports\nimport { useEffect, useState } from \"react\"\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\"\n\nconst ScrollTop = (props) => {\n  // ** Props\n  const { showOffset, scrollBehaviour, children, ...rest } = props\n\n  // ** State\n  const [visible, setVisible] = useState(false)\n\n  useEffect(() => {\n    if (window) {\n      window.addEventListener(\"scroll\", () => {\n        if (window.pageYOffset >= showOffset) {\n          setVisible(true)\n        } else {\n          setVisible(false)\n        }\n      })\n    }\n  }, [])\n\n  const handleScrollToTop = () => {\n    window.scroll({ top: 0, behavior: scrollBehaviour })\n  }\n\n  return (\n    visible && (\n      <div className=\"scroll-to-top\" onClick={handleScrollToTop} {...rest}>\n        {children}\n      </div>\n    )\n  )\n}\n\nexport default ScrollTop\n\n// ** PropTypes\nScrollTop.propTypes = {\n  showOffset: Proptypes.number,\n  children: Proptypes.any.isRequired,\n  scrollBehaviour: Proptypes.oneOf([\"smooth\", \"instant\", \"auto\"])\n}\n\nScrollTop.defaultProps = {\n  scrollBehaviour: \"smooth\"\n}\n","// ** Icons Import\nimport { Heart } from \"react-feather\"\n\nconst Footer = () => {\n  return (\n    <p className=\"clearfix mb-0\">\n      <span className=\"float-md-start d-block d-md-inline-block mt-25\">\n        COPYRIGHT © {new Date().getFullYear()}{\" \"}\n        <a\n          href=\"https://1.envato.market/pixinvent_portfolio\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Pixinvent\n        </a>\n        <span className=\"d-none d-sm-inline-block\">, All rights Reserved</span>\n      </span>\n      <span className=\"float-md-end d-none d-md-block\">\n        Hand-crafted & Made with\n        <Heart size={14} />\n      </span>\n    </p>\n  )\n}\n\nexport default Footer\n","export default __webpack_public_path__ + \"static/media/avatar-s-11.1d46cc62.jpg\";","// ** React Imports\nimport { Link } from \"react-router-dom\"\n\n// ** Custom Components\nimport Avatar from \"@components/avatar\"\n\n// ** Third Party Components\nimport {\n  User,\n  Mail,\n  CheckSquare,\n  MessageSquare,\n  Settings,\n  CreditCard,\n  HelpCircle,\n  Power\n} from \"react-feather\"\n\n// ** Reactstrap Imports\nimport {\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem\n} from \"reactstrap\"\n\n// ** Default Avatar Image\nimport defaultAvatar from \"@src/assets/images/portrait/small/avatar-s-11.jpg\"\n\nconst UserDropdown = () => {\n  return (\n    <UncontrolledDropdown tag=\"li\" className=\"dropdown-user nav-item\">\n      <DropdownToggle\n        href=\"/\"\n        tag=\"a\"\n        className=\"nav-link dropdown-user-link\"\n        onClick={(e) => e.preventDefault()}\n      >\n        <div className=\"user-nav d-sm-flex d-none\">\n          <span className=\"user-name fw-bold\">John Doe</span>\n          <span className=\"user-status\">Admin</span>\n        </div>\n        <Avatar\n          img={defaultAvatar}\n          imgHeight=\"40\"\n          imgWidth=\"40\"\n          status=\"online\"\n        />\n      </DropdownToggle>\n      <DropdownMenu end>\n        <DropdownItem tag={Link} to=\"/\" onClick={(e) => e.preventDefault()}>\n          <User size={14} className=\"me-75\" />\n          <span className=\"align-middle\">Profile</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to=\"/\" onClick={(e) => e.preventDefault()}>\n          <Mail size={14} className=\"me-75\" />\n          <span className=\"align-middle\">Inbox</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to=\"/\" onClick={(e) => e.preventDefault()}>\n          <CheckSquare size={14} className=\"me-75\" />\n          <span className=\"align-middle\">Tasks</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to=\"/\" onClick={(e) => e.preventDefault()}>\n          <MessageSquare size={14} className=\"me-75\" />\n          <span className=\"align-middle\">Chats</span>\n        </DropdownItem>\n        <DropdownItem divider />\n        <DropdownItem\n          tag={Link}\n          to=\"/pages/\"\n          onClick={(e) => e.preventDefault()}\n        >\n          <Settings size={14} className=\"me-75\" />\n          <span className=\"align-middle\">Settings</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to=\"/\" onClick={(e) => e.preventDefault()}>\n          <CreditCard size={14} className=\"me-75\" />\n          <span className=\"align-middle\">Pricing</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to=\"/\" onClick={(e) => e.preventDefault()}>\n          <HelpCircle size={14} className=\"me-75\" />\n          <span className=\"align-middle\">FAQ</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to=\"/login\">\n          <Power size={14} className=\"me-75\" />\n          <span className=\"align-middle\">Logout</span>\n        </DropdownItem>\n      </DropdownMenu>\n    </UncontrolledDropdown>\n  )\n}\n\nexport default UserDropdown\n","// ** Dropdowns Imports\nimport UserDropdown from \"./UserDropdown\"\n\nconst NavbarUser = () => {\n  return (\n    <ul className=\"nav navbar-nav align-items-center ms-auto\">\n      <UserDropdown />\n    </ul>\n  )\n}\nexport default NavbarUser\n","// ** React Imports\nimport { Fragment } from \"react\"\n\n// ** Custom Components\nimport NavbarUser from \"./NavbarUser\"\n\n// ** Third Party Components\nimport { Sun, Moon, Menu } from \"react-feather\"\n\n// ** Reactstrap Imports\nimport { NavItem, NavLink } from \"reactstrap\"\n\nconst ThemeNavbar = (props) => {\n  // ** Props\n  const { skin, setSkin, setMenuVisibility } = props\n\n  // ** Function to toggle Theme (Light/Dark)\n  const ThemeToggler = () => {\n    if (skin === \"dark\") {\n      return <Sun className=\"ficon\" onClick={() => setSkin(\"light\")} />\n    } else {\n      return <Moon className=\"ficon\" onClick={() => setSkin(\"dark\")} />\n    }\n  }\n\n  return (\n    <Fragment>\n      <div className=\"bookmark-wrapper d-flex align-items-center\">\n        <ul className=\"navbar-nav d-xl-none\">\n          <NavItem className=\"mobile-menu me-auto\">\n            <NavLink\n              className=\"nav-menu-main menu-toggle hidden-xs is-active\"\n              onClick={() => setMenuVisibility(true)}\n            >\n              <Menu className=\"ficon\" />\n            </NavLink>\n          </NavItem>\n        </ul>\n        <NavItem className=\"d-none d-lg-block\">\n          <NavLink className=\"nav-link-style\">\n            <ThemeToggler />\n          </NavLink>\n        </NavItem>\n      </div>\n      <NavbarUser skin={skin} setSkin={setSkin} />\n    </Fragment>\n  )\n}\n\nexport default ThemeNavbar\n","// ** React Imports\nimport { useEffect } from \"react\"\nimport { NavLink } from \"react-router-dom\"\n\n// ** Icons Imports\nimport { Disc, X, Circle } from \"react-feather\"\n\n// ** Config\nimport themeConfig from \"@configs/themeConfig\"\n\n// ** Utils\nimport { getUserData, getHomeRouteForLoggedInUser } from \"@utils\"\n\nconst VerticalMenuHeader = (props) => {\n  // ** Props\n  const {\n    menuCollapsed,\n    setMenuCollapsed,\n    setMenuVisibility,\n    setGroupOpen,\n    menuHover\n  } = props\n\n  // ** Vars\n  const user = getUserData()\n\n  // ** Reset open group\n  useEffect(() => {\n    if (!menuHover && menuCollapsed) setGroupOpen([])\n  }, [menuHover, menuCollapsed])\n\n  // ** Menu toggler component\n  const Toggler = () => {\n    if (!menuCollapsed) {\n      return (\n        <Disc\n          size={20}\n          data-tour=\"toggle-icon\"\n          className=\"text-primary toggle-icon d-none d-xl-block\"\n          onClick={() => setMenuCollapsed(true)}\n        />\n      )\n    } else {\n      return (\n        <Circle\n          size={20}\n          data-tour=\"toggle-icon\"\n          className=\"text-primary toggle-icon d-none d-xl-block\"\n          onClick={() => setMenuCollapsed(false)}\n        />\n      )\n    }\n  }\n\n  return (\n    <div className=\"navbar-header\">\n      <ul className=\"nav navbar-nav flex-row\">\n        <li className=\"nav-item me-auto\">\n          <NavLink\n            to={user ? getHomeRouteForLoggedInUser(user.role) : \"/\"}\n            className=\"navbar-brand\"\n          >\n            <span className=\"brand-logo\">\n              <img src={themeConfig.app.appLogoImage} alt=\"logo\" />\n            </span>\n            <h2 className=\"brand-text mb-0\">{themeConfig.app.appName}</h2>\n          </NavLink>\n        </li>\n        <li className=\"nav-item nav-toggle\">\n          <div className=\"nav-link modern-nav-toggle cursor-pointer\">\n            <Toggler />\n            <X\n              onClick={() => setMenuVisibility(false)}\n              className=\"toggle-icon icon-x d-block d-xl-none\"\n              size={20}\n            />\n          </div>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default VerticalMenuHeader\n","// ** React Imports\nimport { NavLink } from \"react-router-dom\"\n\n// ** Third Party Components\nimport classnames from \"classnames\"\n\n// ** Reactstrap Imports\nimport { Badge } from \"reactstrap\"\n\nconst VerticalNavMenuLink = ({ item, activeItem }) => {\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? \"a\" : NavLink\n\n  // ** Hooks\n\n  return (\n    <li\n      className={classnames({\n        \"nav-item\": !item.children,\n        disabled: item.disabled,\n        active: item.navLink === activeItem\n      })}\n    >\n      <LinkTag\n        className=\"d-flex align-items-center\"\n        target={item.newTab ? \"_blank\" : undefined}\n        /*eslint-disable */\n        {...(item.externalLink === true\n          ? {\n              href: item.navLink || \"/\",\n            }\n          : {\n              to: item.navLink || \"/\",\n              className: ({ isActive }) => {\n                if (isActive && !item.disabled) {\n                  return \"d-flex align-items-center active\";\n                }\n              },\n            })}\n        onClick={(e) => {\n          if (\n            item.navLink.length === 0 ||\n            item.navLink === \"#\" ||\n            item.disabled === true\n          ) {\n            e.preventDefault();\n          }\n        }}\n      >\n        {item.icon}\n        <span className=\"menu-item text-truncate\">{item.title}</span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className=\"ms-auto me-1\" color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </LinkTag>\n    </li>\n  );\n};\n\nexport default VerticalNavMenuLink;\n","/* eslint-disable implicit-arrow-linebreak */\n// ** React Imports\nimport { useContext } from \"react\"\nimport { AbilityContext } from \"@src/utility/context/Can\"\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveVerticalNavMenuItemComponent = (item) => {\n  if (item.header) return \"VerticalNavMenuSectionHeader\"\n  if (item.children) return \"VerticalNavMenuGroup\"\n  return \"VerticalNavMenuLink\"\n}\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveHorizontalNavMenuItemComponent = (item) => {\n  if (item.children) return \"HorizontalNavMenuGroup\"\n  return \"HorizontalNavMenuLink\"\n}\n\n/**\n * Check if nav-link is active\n * @param {Object} link nav-link object\n */\nexport const isNavLinkActive = (link, currentURL, routerProps) => {\n  return (\n    currentURL === link ||\n    (routerProps &&\n      routerProps.meta &&\n      routerProps.meta.navLink &&\n      routerProps.meta.navLink === link)\n  )\n  // return currentURL === link\n}\n\n/**\n * Check if the given item has the given url\n * in one of its children\n *\n * @param item\n * @param activeItem\n */\nexport const hasActiveChild = (item, currentUrl) => {\n  const { children } = item\n\n  if (!children) {\n    return false\n  }\n\n  for (const child of children) {\n    if (child.children) {\n      if (hasActiveChild(child, currentUrl)) {\n        return true\n      }\n    }\n\n    // Check if the child has a link and is active\n    if (\n      child &&\n      child.navLink &&\n      currentUrl &&\n      (child.navLink === currentUrl || currentUrl.includes(child.navLink))\n    ) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Check if this is a children\n * of the given item\n *\n * @param children\n * @param openGroup\n * @param currentActiveGroup\n */\nexport const removeChildren = (children, openGroup, currentActiveGroup) => {\n  children.forEach((child) => {\n    if (!currentActiveGroup.includes(child.id)) {\n      const index = openGroup.indexOf(child.id)\n      if (index > -1) openGroup.splice(index, 1)\n      if (child.children) removeChildren(child.children, openGroup, currentActiveGroup)\n    }\n  })\n}\n\nconst checkForVisibleChild = (arr, ability) => {\n  return arr.some((i) => {\n    if (i.children) {\n      return checkForVisibleChild(i.children, ability)\n    } else {\n      return ability.can(i.action, i.resource)\n    }\n  })\n}\n\nexport const canViewMenuGroup = (item) => {\n  const ability = useContext(AbilityContext)\n  // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\n  const hasAnyVisibleChild =\n    item.children && checkForVisibleChild(item.children, ability)\n\n  // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\n  // ** Else check for ability using provided resource and action along with checking if has any visible child\n  if (!(item.action && item.resource)) {\n    return hasAnyVisibleChild\n  }\n  return ability.can(item.action, item.resource) && hasAnyVisibleChild\n}\n\nexport const canViewMenuItem = (item) => {\n  const ability = useContext(AbilityContext)\n  return ability.can(item.action, item.resource)\n}\n","// ** React Imports\nimport { useEffect } from \"react\"\nimport { Link, useLocation } from \"react-router-dom\"\n\n// ** Third Party Components\nimport classnames from \"classnames\"\n\n// ** Reactstrap Imports\nimport { Collapse, Badge } from \"reactstrap\"\n\n// ** Vertical Menu Items Component\nimport VerticalNavMenuItems from \"./VerticalNavMenuItems\"\n\n// ** Utils\nimport { hasActiveChild, removeChildren } from \"@layouts/utils\"\n\nconst VerticalNavMenuGroup = ({\n  item,\n  groupOpen,\n  menuHover,\n  activeItem,\n  parentItem,\n  groupActive,\n  setGroupOpen,\n  menuCollapsed,\n  setGroupActive,\n  currentActiveGroup,\n  setCurrentActiveGroup,\n  ...rest\n}) => {\n  // ** Hooks\n\n  const location = useLocation()\n\n  // ** Current Val\n  const currentURL = useLocation().pathname\n\n  // ** Toggle Open Group\n  const toggleOpenGroup = (item, parent) => {\n    let openGroup = groupOpen\n    const activeGroup = groupActive\n\n    // ** If Group is already open and clicked, close the group\n    if (openGroup.includes(item.id)) {\n      openGroup.splice(openGroup.indexOf(item.id), 1)\n\n      // ** If clicked Group has open group children, Also remove those children to close those groups\n      if (item.children) {\n        removeChildren(item.children, openGroup, groupActive)\n      }\n    } else if (\n      activeGroup.includes(item.id) ||\n      currentActiveGroup.includes(item.id)\n    ) {\n      // ** If Group clicked is Active Group\n\n      // ** If Active group is closed and clicked again, we should open active group else close active group\n      if (\n        !activeGroup.includes(item.id) &&\n        currentActiveGroup.includes(item.id)\n      ) {\n        activeGroup.push(item.id)\n      } else {\n        activeGroup.splice(activeGroup.indexOf(item.id), 1)\n      }\n\n      // ** Update Active Group\n      setGroupActive([...activeGroup])\n    } else if (parent) {\n      // ** If Group clicked is the child of a open group, first remove all the open groups under that parent\n      if (parent.children) {\n        removeChildren(parent.children, openGroup, groupActive)\n      }\n\n      // ** After removing all the open groups under that parent, add the clicked group to open group array\n      if (!openGroup.includes(item.id)) {\n        openGroup.push(item.id)\n      }\n    } else {\n      // ** If clicked on another group that is not active or open, create openGroup array from scratch\n\n      // ** Empty Open Group array\n      openGroup = []\n\n      // ** Push current clicked group item to Open Group array\n      if (!openGroup.includes(item.id)) {\n        openGroup.push(item.id)\n      }\n    }\n    setGroupOpen([...openGroup])\n  }\n\n  // ** On Group Item Click\n  const onCollapseClick = (e, item) => {\n    toggleOpenGroup(item, parentItem)\n\n    e.preventDefault()\n  }\n\n  // ** Checks url & updates active item\n  useEffect(() => {\n    if (hasActiveChild(item, currentURL)) {\n      if (!groupActive.includes(item.id)) groupActive.push(item.id)\n    } else {\n      const index = groupActive.indexOf(item.id)\n      if (index > -1) groupActive.splice(index, 1)\n    }\n    setGroupActive([...groupActive])\n    setCurrentActiveGroup([...groupActive])\n    setGroupOpen([])\n  }, [location])\n\n  // ** Returns condition to add open class\n  const openClassCondition = (id) => {\n    if ((menuCollapsed && menuHover) || menuCollapsed === false) {\n      if (groupActive.includes(id) || groupOpen.includes(id)) {\n        return true\n      }\n    } else if (\n      groupActive.includes(id) &&\n      menuCollapsed &&\n      menuHover === false\n    ) {\n      return false\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <li\n      className={classnames(\"nav-item has-sub\", {\n        open: openClassCondition(item.id),\n        \"menu-collapsed-open\": groupActive.includes(item.id),\n        \"sidebar-group-active\":\n          groupActive.includes(item.id) ||\n          groupOpen.includes(item.id) ||\n          currentActiveGroup.includes(item.id)\n      })}\n    >\n      <Link\n        className=\"d-flex align-items-center\"\n        to=\"/\"\n        onClick={(e) => onCollapseClick(e, item)}\n      >\n        {item.icon}\n        <span className=\"menu-title text-truncate\">{item.title}</span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className=\"ms-auto me-1\" color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </Link>\n\n      {/* Render Child Recursively Through VerticalNavMenuItems Component */}\n      <ul className=\"menu-content\">\n        <Collapse\n          isOpen={\n            (groupActive && groupActive.includes(item.id)) ||\n            (groupOpen && groupOpen.includes(item.id))\n          }\n        >\n          <VerticalNavMenuItems\n            {...rest}\n            items={item.children}\n            groupActive={groupActive}\n            setGroupActive={setGroupActive}\n            currentActiveGroup={currentActiveGroup}\n            setCurrentActiveGroup={setCurrentActiveGroup}\n            groupOpen={groupOpen}\n            setGroupOpen={setGroupOpen}\n            parentItem={item}\n            menuCollapsed={menuCollapsed}\n            menuHover={menuHover}\n            activeItem={activeItem}\n          />\n        </Collapse>\n      </ul>\n    </li>\n  )\n}\n\nexport default VerticalNavMenuGroup\n","// ** Third Party Components\nimport { MoreHorizontal } from \"react-feather\"\n\nconst VerticalNavMenuSectionHeader = ({ item }) => {\n  return (\n    <li className=\"navigation-header\">\n      <span>{item.header}</span>\n      <MoreHorizontal className=\"feather-more-horizontal\" />\n    </li>\n  )\n}\n\nexport default VerticalNavMenuSectionHeader\n","// ** Vertical Menu Components\nimport VerticalNavMenuLink from \"./VerticalNavMenuLink\"\nimport VerticalNavMenuGroup from \"./VerticalNavMenuGroup\"\nimport VerticalNavMenuSectionHeader from \"./VerticalNavMenuSectionHeader\"\n\n// ** Utils\nimport { resolveVerticalNavMenuItemComponent as resolveNavItemComponent } from \"@layouts/utils\"\n\nconst VerticalMenuNavItems = (props) => {\n  // ** Components Object\n  const Components = {\n    VerticalNavMenuLink,\n    VerticalNavMenuGroup,\n    VerticalNavMenuSectionHeader\n  }\n\n  // ** Render Nav Menu Items\n  const RenderNavItems = props.items.map((item, index) => {\n    const TagName = Components[resolveNavItemComponent(item)]\n    if (item.children) {\n      return (\n        canViewMenuGroup(item) && (\n          <TagName item={item} index={index} key={item.id} {...props} />\n        )\n      )\n    }\n    return <TagName key={item.id || item.header} item={item} {...props} />\n  })\n\n  return RenderNavItems\n}\n\nexport default VerticalMenuNavItems\n","// ** React Imports\nimport { Fragment, useState, useRef } from \"react\"\n\n// ** Third Party Components\nimport classnames from \"classnames\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\n\n// ** Vertical Menu Components\nimport VerticalMenuHeader from \"./VerticalMenuHeader\"\nimport VerticalNavMenuItems from \"./VerticalNavMenuItems\"\n\nconst Sidebar = (props) => {\n  // ** Props\n  const { menuCollapsed, menu, skin, menuData } = props\n\n  // ** States\n  const [groupOpen, setGroupOpen] = useState([])\n  const [groupActive, setGroupActive] = useState([])\n  const [currentActiveGroup, setCurrentActiveGroup] = useState([])\n  const [activeItem, setActiveItem] = useState(null)\n\n  // ** Menu Hover State\n  const [menuHover, setMenuHover] = useState(false)\n\n  // ** Ref\n  const shadowRef = useRef(null)\n\n  // ** Function to handle Mouse Enter\n  const onMouseEnter = () => {\n    setMenuHover(true)\n  }\n\n  // ** Scroll Menu\n  const scrollMenu = (container) => {\n    if (shadowRef && container.scrollTop > 0) {\n      if (!shadowRef.current.classList.contains(\"d-block\")) {\n        shadowRef.current.classList.add(\"d-block\")\n      }\n    } else {\n      if (shadowRef.current.classList.contains(\"d-block\")) {\n        shadowRef.current.classList.remove(\"d-block\")\n      }\n    }\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={classnames(\n          \"main-menu menu-fixed menu-accordion menu-shadow\",\n          {\n            expanded: menuHover || menuCollapsed === false,\n            \"menu-light\": skin !== \"semi-dark\" && skin !== \"dark\",\n            \"menu-dark\": skin === \"semi-dark\" || skin === \"dark\"\n          }\n        )}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={() => setMenuHover(false)}\n      >\n        {menu ? (\n          menu({ ...props })\n        ) : (\n          <Fragment>\n            {/* Vertical Menu Header */}\n            <VerticalMenuHeader\n              setGroupOpen={setGroupOpen}\n              menuHover={menuHover}\n              {...props}\n            />\n            {/* Vertical Menu Header Shadow */}\n            <div className=\"shadow-bottom\" ref={shadowRef}></div>\n            {/* Perfect Scrollbar */}\n            <PerfectScrollbar\n              className=\"main-menu-content\"\n              options={{ wheelPropagation: false }}\n              onScrollY={(container) => scrollMenu(container)}\n            >\n              <ul className=\"navigation navigation-main\">\n                <VerticalNavMenuItems\n                  items={menuData}\n                  menuData={menuData}\n                  menuHover={menuHover}\n                  groupOpen={groupOpen}\n                  activeItem={activeItem}\n                  groupActive={groupActive}\n                  setGroupOpen={setGroupOpen}\n                  menuCollapsed={menuCollapsed}\n                  setActiveItem={setActiveItem}\n                  setGroupActive={setGroupActive}\n                  currentActiveGroup={currentActiveGroup}\n                  setCurrentActiveGroup={setCurrentActiveGroup}\n                />\n              </ul>\n            </PerfectScrollbar>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Sidebar\n","//** React Imports\nimport { useEffect } from \"react\"\n\n// ** Store & Actions\nimport { handleRTL } from \"@store/layout\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nexport const useRTL = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const isRtl = useSelector((state) => state.layout.isRTL)\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = (value) => {\n    dispatch(handleRTL(value))\n  }\n\n  useEffect(() => {\n    // ** Get HTML Tag\n    const element = document.getElementsByTagName(\"html\")[0]\n\n    // ** If isRTL then add attr dir='rtl' with HTML else attr dir='ltr'\n    if (isRtl) {\n      element.setAttribute(\"dir\", \"rtl\")\n    } else {\n      element.setAttribute(\"dir\", \"ltr\")\n    }\n  }, [isRtl])\n\n  return [isRtl, setValue]\n}\n","// ** Store Imports\nimport { handleNavbarType } from \"@store/layout\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nexport const useNavbarType = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state.layout)\n\n  const setNavbarType = (type) => {\n    dispatch(handleNavbarType(type))\n  }\n\n  return { navbarType: store.navbarType, setNavbarType }\n}\n","// ** Store Imports\nimport { handleFooterType } from \"@store/layout\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nexport const useFooterType = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state.layout)\n\n  const setFooterType = (type) => {\n    dispatch(handleFooterType(type))\n  }\n\n  return { setFooterType, footerType: store.footerType }\n}\n","// ** Store Imports\nimport { handleNavbarColor } from \"@store/layout\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nexport const useNavbarColor = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state.layout)\n\n  // ** Return a wrapped version of useState's setter function\n  const setNavbarColor = (value) => {\n    dispatch(handleNavbarColor(value))\n  }\n\n  return { navbarColor: store.navbarColor, setNavbarColor }\n}\n","// ** React Imports\nimport { useState, useEffect } from \"react\"\nimport { useLocation } from \"react-router-dom\"\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from \"react-redux\"\nimport {\n  handleMenuCollapsed,\n  handleContentWidth,\n  handleMenuHidden\n} from \"@store/layout\"\n\n// ** Third Party Components\nimport classnames from \"classnames\"\nimport { ArrowUp } from \"react-feather\"\n\n// ** Reactstrap Imports\nimport { Navbar, Button } from \"reactstrap\"\n\n// ** Configs\nimport themeConfig from \"@configs/themeConfig\"\n\n// ** Custom Components\n\nimport Customizer from \"@components/customizer\"\nimport ScrollToTop from \"@components/scrolltop\"\nimport FooterComponent from \"./components/footer\"\nimport NavbarComponent from \"./components/navbar\"\nimport SidebarComponent from \"./components/menu/vertical-menu\"\n\n// ** Custom Hooks\nimport { useRTL } from \"@hooks/useRTL\"\nimport { useSkin } from \"@hooks/useSkin\"\nimport { useLayout } from \"@hooks/useLayout\"\nimport { useNavbarType } from \"@hooks/useNavbarType\"\nimport { useFooterType } from \"@hooks/useFooterType\"\nimport { useNavbarColor } from \"@hooks/useNavbarColor\"\n\n// ** Styles\nimport \"@styles/base/core/menu/menu-types/vertical-menu.scss\"\nimport \"@styles/base/core/menu/menu-types/vertical-overlay-menu.scss\"\n\nconst VerticalLayout = (props) => {\n  // ** Props\n  const { menu, navbar, footer, children, menuData } = props\n\n  // ** Hooks\n  const [isRtl, setIsRtl] = useRTL()\n  const { skin, setSkin } = useSkin()\n  const { navbarType, setNavbarType } = useNavbarType()\n  const { footerType, setFooterType } = useFooterType()\n  const { navbarColor, setNavbarColor } = useNavbarColor()\n  const { layout, setLayout, setLastLayout } = useLayout()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n  const [menuVisibility, setMenuVisibility] = useState(false)\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\n\n  // ** Vars\n  const dispatch = useDispatch()\n  const layoutStore = useSelector((state) => state.layout)\n\n  // ** Update Window Width\n  const handleWindowWidth = () => {\n    setWindowWidth(window.innerWidth)\n  }\n\n  // ** Vars\n  const location = useLocation()\n  const isHidden = layoutStore.menuHidden\n  const contentWidth = layoutStore.contentWidth\n  const menuCollapsed = layoutStore.menuCollapsed\n\n  // ** Toggles Menu Collapsed\n  const setMenuCollapsed = (val) => dispatch(handleMenuCollapsed(val))\n\n  // ** Handles Content Width\n  const setContentWidth = (val) => dispatch(handleContentWidth(val))\n\n  // ** Handles Content Width\n  const setIsHidden = (val) => dispatch(handleMenuHidden(val))\n\n  //** This function will detect the Route Change and will hide the menu on menu item click\n  useEffect(() => {\n    if (menuVisibility && windowWidth < 1200) {\n      setMenuVisibility(false)\n    }\n  }, [location])\n\n  //** Sets Window Size & Layout Props\n  useEffect(() => {\n    if (window !== undefined) {\n      window.addEventListener(\"resize\", handleWindowWidth)\n    }\n  }, [windowWidth])\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    return () => setIsMounted(false)\n  }, [])\n\n  // ** Vars\n  const footerClasses = {\n    static: \"footer-static\",\n    sticky: \"footer-fixed\",\n    hidden: \"footer-hidden\"\n  }\n\n  const navbarWrapperClasses = {\n    floating: \"navbar-floating\",\n    sticky: \"navbar-sticky\",\n    static: \"navbar-static\",\n    hidden: \"navbar-hidden\"\n  }\n\n  const navbarClasses = {\n    floating:\n      contentWidth === \"boxed\" ? \"floating-nav container-xxl\" : \"floating-nav\",\n    sticky: \"fixed-top\",\n    static: \"navbar-static-top\",\n    hidden: \"d-none\"\n  }\n\n  const bgColorCondition =\n    navbarColor !== \"\" && navbarColor !== \"light\" && navbarColor !== \"white\"\n\n  if (!isMounted) {\n    return null\n  }\n  return (\n    <div\n      className={classnames(\n        `wrapper vertical-layout ${\n          navbarWrapperClasses[navbarType] || \"navbar-floating\"\n        } ${footerClasses[footerType] || \"footer-static\"}`,\n        {\n          // Modern Menu\n          \"vertical-menu-modern\": windowWidth >= 1200,\n          \"menu-collapsed\": menuCollapsed && windowWidth >= 1200,\n          \"menu-expanded\": !menuCollapsed && windowWidth > 1200,\n\n          // Overlay Menu\n          \"vertical-overlay-menu\": windowWidth < 1200,\n          \"menu-hide\": !menuVisibility && windowWidth < 1200,\n          \"menu-open\": menuVisibility && windowWidth < 1200\n        }\n      )}\n      {...(isHidden ? { \"data-col\": \"1-column\" } : {})}\n    >\n      {!isHidden ? (\n        <SidebarComponent\n          skin={skin}\n          menu={menu}\n          menuData={menuData}\n          menuCollapsed={menuCollapsed}\n          menuVisibility={menuVisibility}\n          setMenuCollapsed={setMenuCollapsed}\n          setMenuVisibility={setMenuVisibility}\n        />\n      ) : null}\n\n      <Navbar\n        expand=\"lg\"\n        container={false}\n        light={skin !== \"dark\"}\n        dark={skin === \"dark\" || bgColorCondition}\n        color={bgColorCondition ? navbarColor : undefined}\n        className={classnames(\n          `header-navbar navbar align-items-center ${\n            navbarClasses[navbarType] || \"floating-nav\"\n          } navbar-shadow`\n        )}\n      >\n        <div className=\"navbar-container d-flex content\">\n          {navbar ? (\n            navbar({ skin, setSkin, setMenuVisibility })\n          ) : (\n            <NavbarComponent\n              setMenuVisibility={setMenuVisibility}\n              skin={skin}\n              setSkin={setSkin}\n            />\n          )}\n        </div>\n      </Navbar>\n      {children}\n\n      {/* Vertical Nav Menu Overlay */}\n      <div\n        className={classnames(\"sidenav-overlay\", {\n          show: menuVisibility\n        })}\n        onClick={() => setMenuVisibility(false)}\n      ></div>\n      {/* Vertical Nav Menu Overlay */}\n\n      {themeConfig.layout.customizer === true ? (\n        <Customizer\n          skin={skin}\n          isRtl={isRtl}\n          layout={layout}\n          setSkin={setSkin}\n          setIsRtl={setIsRtl}\n          isHidden={isHidden}\n          setLayout={setLayout}\n          footerType={footerType}\n          navbarType={navbarType}\n          setIsHidden={setIsHidden}\n          themeConfig={themeConfig}\n          navbarColor={navbarColor}\n          contentWidth={contentWidth}\n          setFooterType={setFooterType}\n          setNavbarType={setNavbarType}\n          setLastLayout={setLastLayout}\n          menuCollapsed={menuCollapsed}\n          setNavbarColor={setNavbarColor}\n          setContentWidth={setContentWidth}\n          setMenuCollapsed={setMenuCollapsed}\n        />\n      ) : null}\n      <footer\n        className={classnames(\n          `footer footer-light ${footerClasses[footerType] || \"footer-static\"}`,\n          {\n            \"d-none\": footerType === \"hidden\"\n          }\n        )}\n      >\n        {footer ? (\n          footer\n        ) : (\n          <FooterComponent\n            footerType={footerType}\n            footerClasses={footerClasses}\n          />\n        )}\n      </footer>\n\n      {themeConfig.layout.scrollTop === true ? (\n        <div className=\"scroll-to-top\">\n          <ScrollToTop showOffset={300} className=\"scroll-top d-block\">\n            <Button className=\"btn-icon\" color=\"primary\">\n              <ArrowUp size={14} />\n            </Button>\n          </ScrollToTop>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default VerticalLayout\n","import { Mail, Home } from \"react-feather\"\n\nexport default [\n  {\n    id: \"home\",\n    title: \"Home\",\n    icon: <Home size={20} />,\n    navLink: \"/home\"\n  },\n  {\n    id: \"secondPage\",\n    title: \"Second Page\",\n    icon: <Mail size={20} />,\n    navLink: \"/second-page\"\n  }\n]\n","// ** React Imports\nimport { Outlet } from \"react-router-dom\"\n\n// ** Core Layout Import\n// !Do not remove the Layout import\nimport Layout from \"@layouts/VerticalLayout\"\n\n// ** Menu Items Array\nimport navigation from \"@src/navigation/vertical\"\n\nconst VerticalLayout = (props) => {\n  // const [menuData, setMenuData] = useState([])\n\n  // ** For ServerSide navigation\n  // useEffect(() => {\n  //   axios.get(URL).then(response => setMenuData(response.data))\n  // }, [])\n\n  return (\n    <Layout menuData={navigation} {...props}>\n      <Outlet />\n    </Layout>\n  )\n}\n\nexport default VerticalLayout\n","// ** React Imports\nimport { NavLink } from \"react-router-dom\"\n\n// ** Third Party Components\nimport classnames from \"classnames\"\n\nconst HorizontalNavMenuLink = ({ item, isChild, setMenuOpen }) => {\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? \"a\" : NavLink\n\n  // ** Hooks\n\n  const handleClick = () => {\n    if (setMenuOpen) {\n      setMenuOpen(false)\n    }\n  }\n\n  return (\n    <li\n      onClick={handleClick}\n      className={classnames(\"nav-item\", {\n        disabled: item.disabled\n      })}\n    >\n      <LinkTag\n        className={classnames(\"d-flex align-items-center\", {\n          \"dropdown-item\": isChild,\n          \"nav-link\": !isChild\n        })}\n        target={item.newTab ? \"_blank\" : undefined}\n        /*eslint-disable */\n        {...(item.externalLink === true\n          ? {\n              href: item.navLink || \"/\",\n            }\n          : {\n              to: item.navLink || \"/\",\n              className: ({ isActive }) => {\n                const commonClass = \"d-flex align-items-center\";\n                if (isActive && !item.disabled && item.navLink !== \"#\") {\n                  if (isChild) {\n                    return `${commonClass} dropdown-item active`;\n                  } else {\n                    return `${commonClass} nav-link active`;\n                  }\n                } else {\n                  if (isChild) {\n                    return `${commonClass} dropdown-item`;\n                  } else {\n                    return `${commonClass} nav-link`;\n                  }\n                }\n              },\n            })}\n        /*eslint-enable */\n      >\n        {item.icon}\n        <span>{item.title}</span>\n      </LinkTag>\n    </li>\n  )\n}\n\nexport default HorizontalNavMenuLink\n","// ** React Imports\nimport { useState } from \"react\"\nimport { Link, useLocation } from \"react-router-dom\"\n\n// ** Third Party Components\nimport classnames from \"classnames\"\nimport { usePopper } from \"react-popper\"\n\n// ** Utils\nimport { hasActiveChild } from \"@layouts/utils\"\n\n// ** Hooks\nimport { useRTL } from \"@hooks/useRTL\"\n\n// ** Horizontal Menu Items Component\nimport HorizontalNavMenuItems from \"./HorizontalNavMenuItems\"\n\nconst applyHeight = {\n  enabled: true,\n  name: \"applyHeight\",\n  phase: \"beforeWrite\",\n  fn: (data) => {\n    const pageHeight = window.innerHeight,\n      popperEl = data.state.elements.popper,\n      ddTop = popperEl.getBoundingClientRect().top,\n      ddHeight = popperEl.clientHeight\n    let maxHeight, stylesObj\n    // ** Calculate and set height\n    if (pageHeight - ddTop - ddHeight - 28 < 1) {\n      maxHeight = pageHeight - ddTop - 25\n      stylesObj = {\n        maxHeight,\n        overflowY: \"auto\"\n      }\n    }\n    const ddRef = popperEl.getBoundingClientRect()\n    // ** If there is not space left to open sub menu open it to the right\n    if (ddRef.left + ddRef.width - (window.innerWidth - 16) >= 0) {\n      popperEl.closest(\".dropdown\").classList.add(\"openLeft\")\n    }\n    data.state.styles.popper = { ...data.state.styles.popper, ...stylesObj }\n  }\n}\n\nconst HorizontalNavMenuGroup = (props) => {\n  // ** Props\n  const { item, submenu, isChild } = props\n\n  // ** State\n  const [menuOpen, setMenuOpen] = useState(false)\n  const [popperElement, setPopperElement] = useState(null)\n  const [referenceElement, setReferenceElement] = useState(null)\n\n  // ** Hooks\n  const [isRtl] = useRTL()\n\n  // ** Vars\n  const popperOffsetHorizontal = isRtl ? 16 : -16\n  const popperPlacement = isRtl ? \"bottom-end\" : \"bottom-start\"\n  const popperPlacementSubMenu = isRtl ? \"left-start\" : \"right-start\"\n\n  // ** Hooks\n\n  const currentURL = useLocation().pathname\n  const { update, styles, attributes } = usePopper(\n    referenceElement,\n    popperElement,\n    {\n      placement: isChild ? popperPlacementSubMenu : popperPlacement,\n      modifiers: [\n        applyHeight,\n        {\n          enabled: true,\n          name: \"offset\",\n          options: {\n            offset: isChild ? [-8, 15] : [popperOffsetHorizontal, 5]\n          }\n        }\n      ]\n    }\n  )\n\n  const handleMouseEnter = () => {\n    setMenuOpen(true)\n    update()\n  }\n\n  return (\n    <li\n      ref={setReferenceElement}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={() => setMenuOpen(false)}\n      className={classnames(\"dropdown\", {\n        show: menuOpen,\n        \"nav-item\": submenu === false,\n        \"dropdown-submenu\": submenu === true,\n        \"sidebar-group-active active\": hasActiveChild(item, currentURL)\n      })}\n    >\n      <Link\n        to=\"/\"\n        onClick={(e) => e.preventDefault()}\n        className={classnames(\"dropdown-toggle d-flex align-items-center\", {\n          \"dropdown-item\": submenu === true,\n          \"nav-link\": submenu === false\n        })}\n      >\n        {item.icon}\n        <span>{item.title}</span>\n      </Link>\n      <ul\n        ref={setPopperElement}\n        style={{ ...styles.popper }}\n        {...attributes.popper}\n        className={classnames(\"dropdown-menu\", {\n          \"first-level\": submenu === false\n        })}\n      >\n        <HorizontalNavMenuItems\n          isChild={true}\n          submenu={true}\n          parentItem={item}\n          menuOpen={menuOpen}\n          items={item.children}\n          setMenuOpen={setMenuOpen}\n        />\n      </ul>\n    </li>\n  )\n}\n\nexport default HorizontalNavMenuGroup\n","// ** Menu Components Imports\nimport HorizontalNavMenuLink from \"./HorizontalNavMenuLink\"\nimport HorizontalNavMenuGroup from \"./HorizontalNavMenuGroup\"\nimport { resolveHorizontalNavMenuItemComponent as resolveNavItemComponent } from \"@layouts/utils\"\n\nconst HorizontalNavMenuItems = (props) => {\n  // ** Components Object\n  const Components = {\n    HorizontalNavMenuGroup,\n    HorizontalNavMenuLink\n  }\n\n  // ** Render Nav Items\n  const RenderNavItems = props.items.map((item, index) => {\n    const TagName = Components[resolveNavItemComponent(item)]\n    if (item.children) {\n      return (\n        canViewMenuGroup(item) && (\n          <TagName item={item} index={index} key={item.id} {...props} />\n        )\n      )\n    }\n    return <TagName item={item} index={index} key={item.id} {...props} />\n  })\n\n  return RenderNavItems\n}\n\nexport default HorizontalNavMenuItems\n","// ** Horizontal Menu Components\nimport HorizontalNavMenuItems from \"./HorizontalNavMenuItems\"\n\nconst HorizontalMenu = ({ menuData }) => {\n  return (\n    <div className=\"navbar-container main-menu-content\">\n      <ul className=\"nav navbar-nav\" id=\"main-menu-navigation\">\n        <HorizontalNavMenuItems submenu={false} items={menuData} />\n      </ul>\n    </div>\n  )\n}\n\nexport default HorizontalMenu\n","// ** React Imports\nimport { Link } from \"react-router-dom\"\nimport { useState, useEffect } from \"react\"\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { handleMenuHidden, handleContentWidth } from \"@store/layout\"\n\n// ** Third Party Components\nimport classnames from \"classnames\"\nimport { ArrowUp } from \"react-feather\"\n\n// ** Reactstrap Imports\nimport { Navbar, NavItem, Button } from \"reactstrap\"\n\n// ** Configs\nimport themeConfig from \"@configs/themeConfig\"\n\n// ** Custom Components\n\nimport Customizer from \"@components/customizer\"\nimport ScrollToTop from \"@components/scrolltop\"\nimport NavbarComponent from \"./components/navbar\"\nimport FooterComponent from \"./components/footer\"\nimport MenuComponent from \"./components/menu/horizontal-menu\"\n\n// ** Custom Hooks\nimport { useRTL } from \"@hooks/useRTL\"\nimport { useSkin } from \"@hooks/useSkin\"\nimport { useLayout } from \"@hooks/useLayout\"\nimport { useNavbarType } from \"@hooks/useNavbarType\"\nimport { useFooterType } from \"@hooks/useFooterType\"\nimport { useNavbarColor } from \"@hooks/useNavbarColor\"\n\n// ** Styles\nimport \"@styles/base/core/menu/menu-types/horizontal-menu.scss\"\n\nconst HorizontalLayout = (props) => {\n  // ** Props\n  const { navbar, menuData, footer, children, menu } = props\n\n  // ** Hooks\n  const { skin, setSkin } = useSkin()\n  const [isRtl, setIsRtl] = useRTL()\n  const { navbarType, setNavbarType } = useNavbarType()\n  const { footerType, setFooterType } = useFooterType()\n  const { navbarColor, setNavbarColor } = useNavbarColor()\n  const { layout, setLayout, setLastLayout } = useLayout()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n  const [navbarScrolled, setNavbarScrolled] = useState(false)\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const layoutStore = useSelector((state) => state.layout)\n\n  // ** Vars\n  const contentWidth = layoutStore.contentWidth\n  const isHidden = layoutStore.menuHidden\n\n  // ** Handles Content Width\n  const setContentWidth = (val) => dispatch(handleContentWidth(val))\n\n  // ** Handles Content Width\n  const setIsHidden = (val) => dispatch(handleMenuHidden(val))\n\n  // ** UseEffect Cleanup\n  const cleanup = () => {\n    setIsMounted(false)\n    setNavbarScrolled(false)\n  }\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    window.addEventListener(\"scroll\", function () {\n      if (window.pageYOffset > 65 && navbarScrolled === false) {\n        setNavbarScrolled(true)\n      }\n      if (window.pageYOffset < 65) {\n        setNavbarScrolled(false)\n      }\n    })\n    return () => cleanup()\n  }, [])\n\n  // ** Vars\n  const footerClasses = {\n    static: \"footer-static\",\n    sticky: \"footer-fixed\",\n    hidden: \"footer-hidden\"\n  }\n\n  const navbarWrapperClasses = {\n    floating: \"navbar-floating\",\n    sticky: \"navbar-sticky\",\n    static: \"navbar-static\"\n  }\n\n  const navbarClasses = {\n    floating:\n      contentWidth === \"boxed\" ? \"floating-nav container-xxl\" : \"floating-nav\",\n    sticky: \"fixed-top\"\n  }\n\n  const bgColorCondition =\n    navbarColor !== \"\" && navbarColor !== \"light\" && navbarColor !== \"white\"\n\n  if (!isMounted) {\n    return null\n  }\n\n  return (\n    <div\n      className={classnames(\n        `wrapper horizontal-layout horizontal-menu ${\n          navbarWrapperClasses[navbarType] || \"navbar-floating\"\n        } ${footerClasses[footerType] || \"footer-static\"} menu-expanded`\n      )}\n      {...(isHidden ? { \"data-col\": \"1-column\" } : {})}\n    >\n      <Navbar\n        expand=\"lg\"\n        container={false}\n        className={classnames(\n          \"header-navbar navbar-fixed align-items-center navbar-shadow navbar-brand-center\",\n          {\n            \"navbar-scrolled\": navbarScrolled\n          }\n        )}\n      >\n        {!navbar && (\n          <div className=\"navbar-header d-xl-block d-none\">\n            <ul className=\"nav navbar-nav\">\n              <NavItem>\n                <Link to=\"/\" className=\"navbar-brand\">\n                  <span className=\"brand-logo\">\n                    <img src={themeConfig.app.appLogoImage} alt=\"logo\" />\n                  </span>\n                  <h2 className=\"brand-text mb-0\">{themeConfig.app.appName}</h2>\n                </Link>\n              </NavItem>\n            </ul>\n          </div>\n        )}\n\n        <div className=\"navbar-container d-flex content\">\n          {navbar ? (\n            navbar({ skin, setSkin })\n          ) : (\n            <NavbarComponent skin={skin} setSkin={setSkin} />\n          )}\n        </div>\n      </Navbar>\n      {!isHidden ? (\n        <div className=\"horizontal-menu-wrapper\">\n          <Navbar\n            tag=\"div\"\n            expand=\"sm\"\n            light={skin !== \"dark\"}\n            dark={skin === \"dark\" || bgColorCondition}\n            className={classnames(\n              `header-navbar navbar-horizontal navbar-shadow menu-border`,\n              {\n                [navbarClasses[navbarType]]: navbarType !== \"static\",\n                \"floating-nav\":\n                  (!navbarClasses[navbarType] && navbarType !== \"static\") ||\n                  navbarType === \"floating\"\n              }\n            )}\n          >\n            {menu ? (\n              menu({ menuData, routerProps, currentActiveItem })\n            ) : (\n              <MenuComponent menuData={menuData} />\n            )}\n          </Navbar>\n        </div>\n      ) : null}\n\n      {children}\n      {themeConfig.layout.customizer === true ? (\n        <Customizer\n          skin={skin}\n          isRtl={isRtl}\n          layout={layout}\n          setSkin={setSkin}\n          setIsRtl={setIsRtl}\n          isHidden={isHidden}\n          setLayout={setLayout}\n          footerType={footerType}\n          navbarType={navbarType}\n          setIsHidden={setIsHidden}\n          themeConfig={themeConfig}\n          navbarColor={navbarColor}\n          contentWidth={contentWidth}\n          setFooterType={setFooterType}\n          setNavbarType={setNavbarType}\n          setLastLayout={setLastLayout}\n          setNavbarColor={setNavbarColor}\n          setContentWidth={setContentWidth}\n        />\n      ) : null}\n      <footer\n        className={classnames(\n          `footer footer-light ${footerClasses[footerType] || \"footer-static\"}`,\n          {\n            \"d-none\": footerType === \"hidden\"\n          }\n        )}\n      >\n        {footer ? (\n          footer\n        ) : (\n          <FooterComponent\n            footerType={footerType}\n            footerClasses={footerClasses}\n          />\n        )}\n      </footer>\n\n      {themeConfig.layout.scrollTop === true ? (\n        <div className=\"scroll-to-top\">\n          <ScrollToTop showOffset={300} className=\"scroll-top d-block\">\n            <Button className=\"btn-icon\" color=\"primary\">\n              <ArrowUp size={14} />\n            </Button>\n          </ScrollToTop>\n        </div>\n      ) : null}\n    </div>\n  )\n}\nexport default HorizontalLayout\n","import { Mail, Home } from \"react-feather\"\n\nexport default [\n  {\n    id: \"home\",\n    title: \"Home\",\n    icon: <Home size={20} />,\n    navLink: \"/home\"\n  },\n  {\n    id: \"secondPage\",\n    title: \"Second Page\",\n    icon: <Mail size={20} />,\n    navLink: \"/second-page\"\n  }\n]\n","// ** React Imports\nimport { Outlet } from \"react-router-dom\"\n\n// ** Core Layout Import\n// !Do not remove the Layout import\nimport Layout from \"@layouts/HorizontalLayout\"\n\n// ** Menu Items Array\nimport navigation from \"@src/navigation/horizontal\"\n\nconst HorizontalLayout = (props) => {\n  // const [menuData, setMenuData] = useState([])\n\n  // ** For ServerSide navigation\n  // useEffect(() => {\n  //   axios.get(URL).then(response => setMenuData(response.data))\n  // }, [])\n\n  return (\n    <Layout menuData={navigation} {...props}>\n      <Outlet />\n    </Layout>\n  )\n}\n\nexport default HorizontalLayout\n","// ** React Imports\nimport { Fragment, useEffect, memo } from \"react\"\n\n// ** Third Party Components\nimport classnames from \"classnames\"\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from \"react-redux\"\nimport {\n  handleContentWidth,\n  handleMenuCollapsed,\n  handleMenuHidden\n} from \"@store/layout\"\n\n// ** ThemeConfig\nimport themeConfig from \"@configs/themeConfig\"\n\n// ** Styles\nimport \"animate.css/animate.css\"\n\nconst LayoutWrapper = (props) => {\n  // ** Props\n  const { children, routeMeta } = props\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state)\n\n  const navbarStore = store.navbar\n  const layoutStored = store.layout.layout\n  const contentWidth = store.layout.contentWidth\n  //** Vars\n  const appLayoutCondition =\n    (layoutStored.layout === \"horizontal\" && !routeMeta) ||\n    (layoutStored.layout === \"horizontal\" && routeMeta && !routeMeta.appLayout)\n  const Tag = appLayoutCondition ? \"div\" : Fragment\n\n  // ** Clean Up Function\n  const cleanUp = () => {\n    if (routeMeta) {\n      if (\n        routeMeta.contentWidth &&\n        routeMeta.contentWidth === store.layout.contentWidth\n      ) {\n        dispatch(handleContentWidth(themeConfig.layout.contentWidth))\n      }\n      if (\n        routeMeta.menuCollapsed &&\n        routeMeta.menuCollapsed === store.layout.menuCollapsed\n      ) {\n        dispatch(handleMenuCollapsed(!store.layout.menuCollapsed))\n      }\n      if (\n        routeMeta.menuHidden &&\n        routeMeta.menuHidden === store.layout.menuHidden\n      ) {\n        dispatch(handleMenuHidden(!store.layout.menuHidden))\n      }\n    }\n  }\n\n  // ** ComponentDidMount\n  useEffect(() => {\n    if (routeMeta) {\n      if (routeMeta.contentWidth) {\n        dispatch(handleContentWidth(routeMeta.contentWidth))\n      }\n      if (routeMeta.menuCollapsed) {\n        dispatch(handleMenuCollapsed(routeMeta.menuCollapsed))\n      }\n      if (routeMeta.menuHidden) {\n        dispatch(handleMenuHidden(routeMeta.menuHidden))\n      }\n    }\n    return () => cleanUp()\n  }, [routeMeta])\n\n  return (\n    <div\n      className={classnames(\"app-content content overflow-hidden\", {\n        [routeMeta ? routeMeta.className : \"\"]:\n          routeMeta && routeMeta.className,\n        \"show-overlay\": navbarStore.query.length\n      })}\n    >\n      <div className=\"content-overlay\"></div>\n      <div className=\"header-navbar-shadow\" />\n      <div\n        className={classnames({\n          \"content-wrapper\": routeMeta && !routeMeta.appLayout,\n          \"content-area-wrapper\": routeMeta && routeMeta.appLayout,\n          \"container-xxl p-0\": contentWidth === \"boxed\"\n        })}\n      >\n        <Tag {...(appLayoutCondition ? { className: \"content-body\" } : {})}>\n          {children}\n        </Tag>\n      </div>\n    </div>\n  )\n}\n\nexport default memo(LayoutWrapper)\n","// ** React Imports\nimport { Suspense } from \"react\"\nimport { Navigate } from \"react-router-dom\"\n\n// ** Utils\nimport { getUserData, getHomeRouteForLoggedInUser } from \"@utils\"\n\nconst PublicRoute = ({ children, route }) => {\n  if (route) {\n    const user = getUserData()\n\n    const restrictedRoute = route.meta && route.meta.restricted\n\n    if (user && restrictedRoute) {\n      return <Navigate to={getHomeRouteForLoggedInUser(user.role)} />\n    }\n  }\n\n  return <Suspense fallback={null}>{children}</Suspense>\n}\n\nexport default PublicRoute\n","// ** React Imports\nimport { Navigate } from \"react-router-dom\"\nimport { useContext, Suspense } from \"react\"\n\n// ** Context Imports\nimport { AbilityContext } from \"@src/utility/context/Can\"\n\nconst PrivateRoute = ({ children, route }) => {\n  // ** Hooks & Vars\n  const ability = useContext(AbilityContext)\n  const user = JSON.parse(localStorage.getItem(\"userData\"))\n\n  if (route) {\n    let action = null\n    let resource = null\n    let restrictedRoute = false\n\n    if (route.meta) {\n      action = route.meta.action\n      resource = route.meta.resource\n      restrictedRoute = route.meta.restricted\n    }\n    if (!user) {\n      return <Navigate to=\"/login\" />\n    }\n    if (user && restrictedRoute) {\n      return <Navigate to=\"/\" />\n    }\n    if (user && restrictedRoute && user.role === \"client\") {\n      return <Navigate to=\"/access-control\" />\n    }\n    if (user && !ability.can(action || \"read\", resource)) {\n      return <Navigate to=\"/misc/not-authorized\" replace />\n    }\n  }\n\n  return <Suspense fallback={null}>{children}</Suspense>\n}\n\nexport default PrivateRoute\n","// ** React Imports\nimport { Fragment, lazy } from \"react\";\nimport { Navigate } from \"react-router-dom\";\n\n// ** Routes Imports\nimport AuthenticationRoutes from \"./Authentication\";\n\n// ** Layouts\nimport BlankLayout from \"@layouts/BlankLayout\";\nimport VerticalLayout from \"@src/layouts/VerticalLayout\";\nimport HorizontalLayout from \"@src/layouts/HorizontalLayout\";\nimport LayoutWrapper from \"@src/@core/layouts/components/layout-wrapper\";\n\n// ** Route Components\nimport PublicRoute from \"@components/routes/PublicRoute\";\nimport PrivateRoute from \"@components/routes/PrivateRoute\";\n\n// ** Utils\nimport { isObjEmpty } from \"@utils\";\n\nconst getLayout = {\n  blank: <BlankLayout />,\n  vertical: <VerticalLayout />,\n  horizontal: <HorizontalLayout />,\n};\n\n// ** Document title\nconst TemplateTitle = \"%s - Vuexy React Admin Template\";\n\n// ** Default Route\nconst DefaultRoute = \"/home\";\n\nconst Home = lazy(() => import(\"../../views/Home\"));\nconst SecondPage = lazy(() => import(\"../../views/SecondPage\"));\n\n// ** Merge Routes\nconst Routes = [\n  {\n    path: \"/home\",\n    element: <Home />,\n  },\n  {\n    path: \"/second-page\",\n    element: <SecondPage />,\n  },\n  ...AuthenticationRoutes,\n];\n\nconst getRouteMeta = (route) => {\n  if (isObjEmpty(route.element.props)) {\n    if (route.meta) {\n      return { routeMeta: route.meta };\n    } else {\n      return {};\n    }\n  }\n};\n\n// ** Return Filtered Array of Routes & Paths\nconst MergeLayoutRoutes = (layout, defaultLayout) => {\n  const LayoutRoutes = [];\n\n  if (Routes) {\n    Routes.filter((route) => {\n      let isBlank = false;\n      // ** Checks if Route layout or Default layout matches current layout\n      if (\n        (route.meta && route.meta.layout && route.meta.layout === layout) ||\n        ((route.meta === undefined || route.meta.layout === undefined) &&\n          defaultLayout === layout)\n      ) {\n        let RouteTag = PrivateRoute;\n\n        // ** Check for public or private route\n        if (route.meta) {\n          route.meta.layout === \"blank\" ? (isBlank = true) : (isBlank = false);\n          RouteTag = route.meta.publicRoute ? PublicRoute : PrivateRoute;\n        }\n        if (route.element) {\n          const Wrapper =\n            // eslint-disable-next-line multiline-ternary\n            isObjEmpty(route.element.props) && isBlank === false\n              ? // eslint-disable-next-line multiline-ternary\n                LayoutWrapper\n              : Fragment;\n\n          route.element = (\n            <Wrapper {...(isBlank === false ? getRouteMeta(route) : {})}>\n              <RouteTag route={route}>{route.element}</RouteTag>\n            </Wrapper>\n          );\n        }\n\n        // Push route to LayoutRoutes\n        LayoutRoutes.push(route);\n      }\n      return LayoutRoutes;\n    });\n  }\n  return LayoutRoutes;\n};\n\nconst getRoutes = (layout) => {\n  const defaultLayout = layout || \"vertical\";\n  const layouts = [\"vertical\", \"horizontal\", \"blank\"];\n\n  const AllRoutes = [];\n\n  layouts.forEach((layoutItem) => {\n    const LayoutRoutes = MergeLayoutRoutes(layoutItem, defaultLayout);\n\n    AllRoutes.push({\n      path: \"/\",\n      element: getLayout[layoutItem] || getLayout[defaultLayout],\n      children: LayoutRoutes,\n    });\n  });\n  return AllRoutes;\n};\n\nexport { DefaultRoute, TemplateTitle, Routes, getRoutes };\n","// ** Router imports\nimport { useRoutes, Navigate } from \"react-router-dom\";\n\n// ** Layouts\nimport BlankLayout from \"@layouts/BlankLayout\";\n\n// ** Router imports\nimport { lazy } from \"react\";\n\n// ** GetRoutes\nimport { getRoutes } from \"./routes\";\n\n// ** Components\nconst Error = lazy(() => import(\"../views/pages/misc/Error\"));\nconst Login = lazy(() => import(\"../views/pages/authentication/Login\"));\nconst NotAuthorized = lazy(() => import(\"../views/pages/misc/NotAuthorized\"));\n\n// ** Hooks Imports\nimport { useLayout } from \"@hooks/useLayout\";\n\n// ** Utils\nimport { getUserData, getHomeRouteForLoggedInUser } from \"../utility/Utils\";\n\nconst Router = () => {\n  // ** Hooks\n  const { layout } = useLayout();\n\n  const allRoutes = getRoutes(layout);\n\n  const getHomeRoute = () => {\n    const user = getUserData();\n    if (user) {\n      return getHomeRouteForLoggedInUser(user.groups[0].name);\n    } else {\n      return \"/login\";\n    }\n  };\n  console.log(getHomeRoute());\n  const routes = useRoutes([\n    {\n      path: \"/\",\n      index: true,\n      element: <Navigate replace to={getHomeRoute()} />,\n    },\n    {\n      path: \"/login\",\n      element: <BlankLayout />,\n      children: [{ path: \"/login\", element: <Login /> }],\n    },\n    {\n      path: \"/auth/not-auth\",\n      element: <BlankLayout />,\n      children: [{ path: \"/auth/not-auth\", element: <NotAuthorized /> }],\n    },\n    {\n      path: \"*\",\n      element: <BlankLayout />,\n      children: [{ path: \"*\", element: <Error /> }],\n    },\n    ...allRoutes,\n  ]);\n\n  return routes;\n};\n\nexport default Router;\n","import { Suspense } from \"react\";\n\n// ** Router Import\nimport Router from \"./router/Router\";\n\nconst App = () => {\n  return (\n    <Suspense fallback={null}>\n      <Router />\n    </Suspense>\n  );\n};\n\nexport default App;\n"],"sourceRoot":""}